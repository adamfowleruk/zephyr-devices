/*
 * Copyright (c) 2021 The Herald Project Contributors
 * 
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <nordic/nrf52833_qiaa.dtsi>


/ {
	model = "Herald nRF52833 Wearable or Beacon";
	compatible = "nordic,nRF52833-QIAA", "nordic,nRF52833", "nordic,nRF52", "simple-bus";
	/*compatible = "nordic,nrf52833";*/

	chosen {
		zephyr,console = &uart0;
		zephyr,shell-uart = &uart0;
		zephyr,uart-mcumgr = &uart0;
		zephyr,bt-mon-uart = &uart0;
		zephyr,bt-c2h-uart = &uart0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
	};

	leds {
		compatible = "gpio-leds";
		/* The following three act for the single RGB LED */
		led0_green: led_0 {
			gpios = <&gpio0 14 GPIO_ACTIVE_LOW>;
			label = "Green LED 0";
		};
		led1_red: led_1 {
			gpios = <&gpio0 15 GPIO_ACTIVE_LOW>;
			label = "Red LED 1";
		};
		led2_blue: led_2 {
			gpios = <&gpio0 17 GPIO_ACTIVE_LOW>;
			label = "Blue LED 2";
		};
		/* Following is unused */
		led3_green: led_3 {
			gpios = <&gpio0 16 GPIO_ACTIVE_LOW>;
			label = "Green LED 3";
		};
	};

	pwmleds {
		compatible = "pwm-leds";
		pwm_led0_green: pwm_led_0 {
			pwms = <&pwm0 14>;
			label = "Green PWM LED 0";
		};
		pwm_led1_red: pwm_led_1 {
			pwms = <&pwm0 15>;
			label = "Red PWM LED 1";
		};
		pwm_led2_blue: pwm_led_2 {
			pwms = <&pwm0 17>;
			label = "Blue PWM LED 2";
		};
	};

	/* Declaration of aliases */
	aliases {
		led0 = &led0_green;
		led1 = &led1_red;
		led2 = &led2_blue;
		led3 = &led3_green;
		led0-green = &led0_green;
		led1-red = &led1_red;
		led2-blue = &led2_blue;
		led3-green = &led3_green;
		pwm-led0 = &pwm_led0_green;
		pwm-led1 = &pwm_led1_red;
		pwm-led2 = &pwm_led2_blue;
		green-pwm-led = &pwm_led0_green;
		red-pwm-led = &pwm_led1_red;
		blue-pwm-led = &pwm_led2_blue;
	};
};

&adc {
	status = "okay";
};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

&uart0 {
	compatible = "nordic,nrf-uarte"; /* WAS nrf-uart (no e) */
	current-speed = <115200>;
	/* No GPIO UART on this board. Use RTT or USB instead. */
	/*status = "okay";*/
	tx-pin = <6>;
	rx-pin = <8>;
	rts-pin = <5>;
	cts-pin = <7>;
};

&i2c0 {
	compatible = "nordic,nrf-twi";
  status = "okay";
	sda-pin = <31>; /* sda-pin = <36>; */
	scl-pin = <11>; /* scl-pin = <7>; */
	
	/* MAIN BOARD - Now add I2C devices on the main board */
  /* Accelerometer - ST Microelectronics LIS2DH12 motion sensor */
  lis2dh12@19 { /* Pulled HIGH via VDD. 18 if to GND instead */
    compatible = "st,lis2dh";
    label = "LIS2DH12";
    reg = <0x19>; /* Pulled HIGH via VDD. 18 if to GND instead */
		irq-gpios = <&gpio0 18 0>, <&gpio0 28 0>;
  };

	/* Real Time Clock (and calendar) with interrupt - pcf85063a */
	pcf85063a@51 {
		compatible = "pcf85063a";
		/* status = "okay"; */
		label = "PCF85063A";
		reg = <0x51>;
		irq-gpios = <&gpio0 2 0>;
	};

	/* Daylight sensor - apds9250 */
	apds9250@52 {
		compatible = "apds9250";
		/* status = "okay"; */
		label = "APDS9250";
		reg = <0x52>;
	};

	/* DAUGHTER BOARD ONLY (SPLIT OUT ASAP):- */
	/* Pulse oximeter and heart rate sensor - MAX30102 */
	max30102@57 {
		compatible = "max30102";
		/* status = "okay"; */
		label = "MAX30102";
		reg = <0x57>;
	};

	/* Skin temperature - tmp1075 */
	tmp1075@48 {
		compatible = "tmp1075";
		/* status = "okay"; */
		label = "TMP1075";
		reg = <0x48>;
	};
};

/* TODO Add battery status reading on BT_STAT pin 0.29/ain5 */

&i2c1 {
	compatible = "nordic,nrf-twi";
	/* Cannot be used together with spi1. */
	/*status = "okay";*/
	sda-pin = <31>;
	scl-pin = <11>;
};

&spi0 {
	compatible = "nordic,nrf-spi";
	/* Cannot be used together with i2c0. */
	/*status = "okay";*/
	sck-pin = <31>;
	mosi-pin = <30>;
	miso-pin = <40>;
};

&spi1 {
	compatible = "nordic,nrf-spi";
	/* Cannot be used together with i2c1. */
	status = "okay";
	sck-pin = <6>;
	mosi-pin = <5>;
	miso-pin = <4>;
};

/* TODO add external qspi flash1 definition here */
/* External flash example: https://github.com/zephyrproject-rtos/zephyr/blob/ffaff520eea4ba8ccd64dcdb3ce36f11085ffa9c/boards/arm/ubx_bmd340eval_nrf52840/ubx_bmd340eval_nrf52840.dts#L210 */
/* And this Nordic board: https://github.com/zephyrproject-rtos/zephyr/blob/main/boards/arm/nrf52840_mdk/nrf52840_mdk.dts */

/* See https://devzone.nordicsemi.com/f/nordic-q-a/73758/configure-mcuboot-with-external-qspi-flash-support */
&qspi {
     status = "okay";
     sck-pin = <19>;
     io-pins = <20>, <21>, <22>, <23>;
     csn-pins = <17>;
     mx25r80: mx25r8035f@0 {
         compatible = "nordic,qspi-nor";
         reg = <0>;
         writeoc = "pp4io";
         readoc = "read4io";
         sck-frequency = <8000000>;
         label = "MX25R80";
         jedec-id = [c2 28 14];
         sfdp-bfp = [
             e5 20 f1 ff  ff ff ff 03  44 eb 08 6b  08 3b 04 bb
             ee ff ff ff  ff ff 00 ff  ff ff 00 ff  0c 20 0f 52
             10 d8 00 ff  23 72 f5 00  82 ed 04 cc  44 83 68 44
             30 b0 30 b0  f7 c4 d5 5c  00 be 29 ff  f0 d0 ff ff
         ];
         size = <DT_SIZE_M(1)>;
         has-dpd;
         t-enter-dpd = <10000>;
         t-exit-dpd = <35000>;
     };
	/*
	status = "okay";
	sck-pin = <35>;
	io-pins = <37>, <36>, <34>, <33>;
	csn-pins = <38>;
	mx25r80: mx25r8035f@0 {
		compatible = "nordic,qspi-nor";
		reg = <0>;
		writeoc = "pp4io";
		readoc = "read4io";
		sck-frequency = <8000000>;
		label = "MX25R80";
		jedec-id = [c2 28 17];
		sfdp-bfp = [
			e5 20 f1 ff  ff ff ff 03  44 eb 08 6b  08 3b 04 bb
			ee ff ff ff  ff ff 00 ff  ff ff 00 ff  0c 20 0f 52
			10 d8 00 ff  23 72 f5 00  82 ed 04 cc  44 83 68 44
			30 b0 30 b0  f7 c4 d5 5c  00 be 29 ff  f0 d0 ff ff
		];
		size = <67108864>;
		has-dpd;
		t-enter-dpd = <10000>;
		t-exit-dpd = <35000>;
	};
	*/
};


/* Note: No specific need for nfc configuration, as that's handled by default in the includes in zephyr for the nrf52833 */
/* See the Nordic SDK "Near Field Communications" documentation and NFC tag samples:- */
/* https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/ug_nfc.html?highlight=nfc */

&pwm0 {
	status = "okay";
	ch0-pin = <14>;
	ch0-inverted;
	ch1-pin = <15>;
	ch1-inverted;
	ch2-pin = <17>;
	ch2-inverted;
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
	 */

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x000000000 0xC000>;
		};
		slot0_partition: partition@c000 {
			label = "image-0";
			reg = <0x0000C000 0x32000>;
		};
		/* TODO consider making the image slots twice the size */
		/* Like this: https://github.com/zephyrproject-rtos/zephyr/blob/12351cb39100a510089979bd4728cf763e7a851b/boards/arm/nrf52840_mdk/nrf52840_mdk.dts#L170 */
		slot1_partition: partition@3e000 {
			label = "image-1";
			reg = <0x0003E000 0x32000>;
		};
		scratch_partition: partition@70000 {
			label = "image-scratch";
			reg = <0x00070000 0xA000>;
		};
		/* The following is application data storage */
		storage_partition: partition@7a000 {
			label = "storage";
			reg = <0x0007A000 0x00006000>;
		};
	};
};

/* TODO include external flash chip storage locations too */

zephyr_udc0: &usbd {
	compatible = "nordic,nrf-usbd";
	status = "okay";
};
